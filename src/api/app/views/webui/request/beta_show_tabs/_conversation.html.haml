:ruby
  # TODO: This looks like it could be a View Component
  open_reviews = bs_request.reviews.opened.for_non_staging_projects
  accepted_reviews = bs_request.reviews.accepted.for_non_staging_projects
  declined_reviews = bs_request.reviews.declined.for_non_staging_projects
.row
  .col-md-12
    .mb-4#description-text
      - if bs_request.description.present?
        = render partial: 'webui/shared/collapsible_text', locals: { text: bs_request.description }
      - else
        %i No description set
.row
  .col-md-4.order-md-2.order-sm-1.mb-4#side-links
    - if accepted_reviews.present? || declined_reviews.present? || open_reviews.present?
      .d-flex.justify-content-between
        %h4
          Reviews
        = render AddReviewDropdownComponent.new(bs_request: bs_request, user: User.session,
                                                can_add_reviews: can_add_reviews,
                                                my_open_reviews: my_open_reviews)
      = render AddReviewCollapsibleComponent.new
      .mb-4
        = render partial: 'webui/request/beta_show_tabs/review_summary', collection: accepted_reviews, as: :review
        = render partial: 'webui/request/beta_show_tabs/review_summary', collection: declined_reviews, as: :review
        = render partial: 'webui/request/beta_show_tabs/review_summary', collection: open_reviews, as: :review

    - if can_add_reviews
      = link_to('#', data: { toggle: 'modal', target: '#add-reviewer-modal' }, title: 'Add a Review') do
        %i.fas.fa-plus-circle.fa-lg.mr-1
        %span.nav-item-name Add a Review
      = render partial: 'add_reviewer_dialog'

    - bs_request.reviews.opened.for_staging_projects.each do |review|
      .pl-3
        %i.fas.fa-info-circle.text-info
        - staging_project = review.project
        Is staged in
        = link_to(review.by_project, staging_workflow_staging_project_path(staging_project.staging_workflow.project, staging_project.name))
  .col-md-8.order-md-1.order-sm-2
    %h4.list-group.mb-4 Comments & Request History
    .timeline{ data: { comment_counter: local_assigns[:comment_counter_id] } }
      .timeline-item
        .d-inline-flex
          - creator = User.find_by_login(bs_request.creator) || User.nobody
          = image_tag_for(creator, size: 35, custom_class: 'rounded-circle bg-light border border-gray-400 avatars-counter')
          %p
            %i.fas.fa-code-commit.text-dark
            = link_to(realname_with_login(creator), user_path(creator))
            created this request
            = link_to('#request-creation', title: l(bs_request.created_at.utc), name: 'request-creation') do
              #{time_ago_in_words(bs_request.created_at)} ago
            - if bs_request.superseding.any?
              superseding
              - bs_request.superseding.each do |superseded_request|
                = link_to("request ##{superseded_request.number}", request_show_path(superseded_request.number, anchor: 'overview'))

      - bs_request.superseding.each do |superseding_request|
        .timeline-item.pb-4
          = link_to('#collapse-superseding', class: 'd-flex align-items-center',
              data: { toggle: 'collapse' },
              aria: { expanded: false, controls: 'collapse-superseding' }) do
            %i.timeline-break.expander>
            %i.timeline-offset.collapser>

            %i.fas.fa-fw.fa-chevron-right.expander.mr-1{ title: 'Show history' }>
            %i.fas.fa-fw.fa-chevron-down.collapser.mr-1{ title: 'Hide history' }>
            %span.expander
              Expand history from superseded request ##{superseding_request.number}
            %span.collapser
              Collapse history from superseded request ##{superseding_request.number}
        .collapse.mb-4#collapse-superseding
          = render BsRequestActivityTimelineComponent.new(bs_request: superseding_request)

      = render BsRequestActivityTimelineComponent.new(bs_request: bs_request)

    .comment_new.mt-3
      = render partial: 'webui/comment/new', locals: { commentable: bs_request }
    %hr
    = render RequestDecisionComponent.new(bs_request: bs_request, action: action,
                                          is_target_maintainer: is_target_maintainer,
                                          is_author: is_author)
