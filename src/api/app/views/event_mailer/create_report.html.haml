:ruby
  def link_to_reportables(event:)
    reportable = Report.find(event['id']).reportable
    case event['reportable_type']
    when 'Comment'
      link_to_commentables_on_reportables(commentable: reportable.commentable)
    when 'Package'
      link_to("#{reportable.name}", package_show_path(package: reportable, project: reportable.project, anchor: 'comments-list', only_path: false, host: @host))
    when 'Project'
      link_to("#{reportable.name}", project_show_path(reportable, anchor: 'comments-list', only_path: false, host: @host))
    when 'User'
      link_to("#{reportable.login}", user_show_path(reportable, only_path: false, host: @host))
    end
  end

  def link_to_commentables_on_reportables(commentable:)
    case commentable
    when BsRequest
      link_to("Request #{commentable.number}", request_show_path(commentable.number, anchor: 'comments-list', only_path: false, host: @host))
    when BsRequestAction
      link_to("Request #{commentable.bs_request.number}", request_show_path(number: commentable.bs_request.number, request_action_id: commentable.id, anchor: 'tab-pane-changes', only_path: false, host: @host))
    when Package
      link_to("#{commentable.name}", package_show_path(package: commentable, project: commentable.project, anchor: 'comments-list', only_path: false, host: @host))
    when Project
      link_to("#{commentable.name}", project_show_path(commentable, anchor: 'comments-list', only_path: false, host: @host))
    end
  end

%p
  = User.find(event['user_id']).login
  reported a #{event['reportable_type'].downcase}
%p
  = link_to_reportables(event: event)
